# ------------------------------------------------------------
# DUSt3R_PQK / configs/workload.yaml
# 作用：统一“工作负载口径”，固定输入形状、配对规则、数据清单位置等
# 当前阶段作为模板使用；后续再填真实路径与数据
# ------------------------------------------------------------

# 随机种子（确保配对顺序、采样一致）
seed: 42

# 设备选择：训练/蒸馏/量化时会由脚本覆盖，模板先给默认
device: "cuda" # 可改为 "cpu" 做快速校验

# 统一输入口径（静态 shape 有利于 TensorRT/TVM 等编译优化）
input:
  shape: [ 1, 3, 512, 384 ] # [batch, channels, height, width]；DUSt3R 按对推理，BS 保持 1
  static_shape: true # 导出 ONNX / TensorRT 时生效
  dtype: "float32" # 训练/蒸馏保持 FP32；量化阶段由 quant.yaml 决定

# 成对推理图的“配对图”构造策略（DUSt3R 的基本单元是 image pair）
pair_graph:
  strategy: "knn_neighbor" # 可选： "knn_neighbor"（邻近帧/视角） 或 "topk_similarity"（按图像特征相似度）
  k: 4 # 每张图连接的邻居数量；评测稳定性建议固定
  shuffle: false # 评测阶段禁用打乱，保证可复现
  max_pairs_per_scene: 200 # 单场景最多 pairs；防止评测时间失控（按需要调整或置空）

# 数据与清单（模板阶段先放占位；后续只需要改路径即可）
data:
  dataset_id: "YOUR_DATASET_TAG" # 你的数据集标识（自定义）
  split: "val" # 评测 split：val/test
  eval_pairs_list: "data/eval_pairs/pairs_val.txt" # 每行："abs_path/imgA.jpg|abs_path/imgB.jpg"
  scenes_list: "data/eval_pairs/scenes_val.txt" # 可选：每行一个场景ID（用于按场景统计/分组）

# 量化校准集（PTQ/QAT 共用）；模板阶段先设规则，后续再放图像
calibration:
  images_root: "data/calibration/" # 放 ≥512 张代表性图片的目录
  min_images: 512 # 建议下限；不足时请先扩充
  sampling: "uniform" # "uniform" | "stratified_by_scene"（分场景分层采样）
  hash_file: "data/calibration/CALIBSET.sha1" # 记录校准集文件哈希，保证可复现

# 端侧测评占位（Jetson / Mobile）；模板阶段先禁用
edge_profile:
  enable: false
  soc: "jetson-agx-orin" # "jetson-nano" / "orin-nx" / "xavier" 等
  power_mode: "30W" # Jetson 的 nvpmodel 功耗档位
  fan_mode: "max" # 散热模式（防降频）
  note: "enable 后，端侧评测脚本读取此段参数并写入日志字段"

# 运行时的小型验证开关（开发期 sanity check 用）
devcheck:
  enable: false
  limit_pairs: 20 # 只跑若干个 pairs 验证流程正确性（不用于正式评测）
